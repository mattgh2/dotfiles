-- local clients_lsp = function()
--       local bufnr = vim.api.nvim_get_current_buf()
--       local clients = vim.lsp.buf_get_clients(bufnr)
--
--       if next(clients) == nil then
--         return "No LSP"
--       end
--       local clients_ = {}
--       for _, client in pairs(clients) do
--         table.insert(clients_, client.name)
--       end
--       return "LSP: " .. table.concat(clients_, "|")
--     end
--
-- local flow = require("flow.colors")
-- flow.setup({ mode = 'base', dark_theme = false, fluo_color = 'pink' })
--
-- local theme = {
--   normal = {
--     a = { fg = flow.colors.black, bg = flow.colors.light_blue },
--     b = { fg = flow.colors.light_blue, bg = flow.colors.fg_gutter },
--     c = { fg = flow.colors.fg_statusline, bg = flow.colors.bg_statusline },
--     z = { fg = flow.colors.white, bg = flow.colors.black },
-- },
--     insert = {
--         a = { bg = flow.colors.cyan, fg = flow.colors.black },
--         b = { bg = flow.fg_gutter, fg = flow.colors.cyan },
--     },
--     visual = {
--         a = { bg = flow.colors.purple, fg = flow.colors.black },
--         b = { bg = flow.colors.fg_gutter, fg = flow.colors.purple },
--     },
--     replace = {
--         a = { bg = flow.colors.red, fg = flow.colors.black },
--         b = { bg = flow.colors.fg_gutter, fg = flow.colors.red },
--     },
--     terminal = {
--         a = { bg = flow.colors.green, fg = flow.colors.black },
--         b = { bg = flow.colors.fg_gutter, fg = flow.colors.green },
--     },
--     command = {
--         a = { bg = flow.colors.yellow, fg = flow.colors.black },
--         b = { bg = flow.colors.fg_gutter, fg = flow.colors.yellow },
--     },
--     inactive = {
--         c = { fg = flow.colors.fg_gutter, bg = flow.colors.bg_statusline },
--   },
-- }
--
-- local empty = require('lualine.component'):extend()
-- function empty:draw(default_highlight)
--   self.status = ''
--   self.applied_separator = ''
--   self:apply_highlights(default_highlight)
--   self:apply_section_separators()
--   return self.status
-- end
--
-- -- Put proper separators and gaps between components in sections
-- local function process_sections(sections)
--   for name, section in pairs(sections) do
--     local left = name:sub(9, 10) < 'x'
--     for pos = 1, name ~= 'lualine_z' and #section or #section - 1 do
--       table.insert(section, pos * 2, { empty, color = { fg = flow.colors.white, bg = flow.colors.white } })
--     end
--     for id, comp in ipairs(section) do
--       if type(comp) ~= 'table' then
--         comp = { comp }
--         section[id] = comp
--       end
--       comp.separator = left and { right = '' } or { left = '' }
--     end
--   end
--   return sections
-- end
--
-- local function search_result()
--   if vim.v.hlsearch == 0 then
--     return ''
--   end
--   local last_search = vim.fn.getreg('/')
--   if not last_search or last_search == '' then
--     return ''
--   end
--   local searchcount = vim.fn.searchcount { maxcount = 9999 }
--   return last_search .. '(' .. searchcount.current .. '/' .. searchcount.total .. ')'
-- end
--
-- local function modified()
--   if vim.bo.modified then
--     return '+'
--   elseif vim.bo.modifiable == false or vim.bo.readonly == true then
--     return '-'
--   end
--   return ''
-- end
--
-- require('lualine').setup {
--   options = {
--     theme = 'gruvbox_light',
--     component_separators = '',
--     section_separators = { left = '', right = '' },
--   },
--   sections = process_sections {
--     lualine_a = { 'mode' },
--     lualine_b = {
--       'branch',
--       'diff',
--       {
--         'diagnostics',
--         source = { 'nvim' },
--         sections = { 'error'},
--         diagnostics_color = { error = { bg = flow.colors.red, fg = flow.colors.white } },
--       },
--       {
--         'diagnostics',
--         source = { 'nvim' },
--         sections = { 'warn' },
--         diagnostics_color = { warn = { bg = flow.colors.yellow, fg = flow.colors.white } },
--       },
--       { 'filename', file_status = false, path = 1 },
--       { modified, color = { bg = flow.colors.red } },
--       {
--         '%w',
--         cond = function()
--           return vim.wo.previewwindow
--         end,
--       },
--       {
--         '%r',
--         cond = function()
--           return vim.bo.readonly
--         end,
--       },
--       {
--         '%q',
--         cond = function()
--           return vim.bo.buftype == 'quickfix'
--         end,
--       },
--     },
--     lualine_c = {},
--     lualine_x = {},
--     lualine_y = { search_result, 'filetype' },
--     lualine_z = { '%l:%c', clients_lsp },
--   },
--   inactive_sections = {
--     lualine_c = { '%f %y %m' },
--     lualine_x = {},
--   },
-- }
