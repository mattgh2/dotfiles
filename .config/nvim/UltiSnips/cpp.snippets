snippet template
int main(int argc, char **argv){

	$1


	return 0;
}
endsnippet

snippet head
//***************************************************************************
//
//  file-name
//  CSCI 241 Assignment assignment-number
//
//  Created by name(s) and z-ID(s)
//
//***************************************************************************
endsnippet

snippet desc
/**
 *
 *
 * @param
 *
 * @return
 */
endsnippet

snippet vi
typedef std::vector<int> vi;
endsnippet

snippet vii
typedef std::vector<std::vector<int>> vii;
endsnippet

snippet ii
typedef std::pair<int,int> ii;
endsnippet

snippet defs
typedef std::pair<int,int> ii;
typedef std::vector<int> vi;
typedef std::vector<vi> vii;
endsnippet

snippet leet
class Solution {
public:
   $1 

};
endsnippet

snippet ll
typedef long long ll;
endsnippet
snippet ull
typedef unsigned long long ull;
endsnippet
snippet mid
int mid = l + ((r - l) >> 1);
endsnippet
snippet umap
typedef std::unordered_map<int,int> umap;
endsnippet
snippet fastio
std::ios::sync_with_stdio(0);
std::cin.tie(0);
endsnippet
snippet libs
#include <bits/stdc++.h>
endsnippet
snippet pi
typedef std::pair<int,int>
endsnippet
snippet pbds
#include <ext/pb_ds/assoc_container.hpp>
endsnippet
snippet iset
using namespace __gnu_pbds;
typedef tree<int,null_type,std::less<int>,rb_tree_tag,tree_order_statistics_node_update> indexed_set;
endsnippet
snippet tiid
typedef std::tuple<int,int,double> tiid;
endsnippet

snippet tiii
typedef std::tuple<int,int,int> tiii;
endsnippet

snippet inf
const double inf = std::numeric_limits<double>::infinity();
endsnippet

